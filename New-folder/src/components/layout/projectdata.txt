
          1. Backend deployed via Render, using Express with MongoDB. Utilizes various packages for authentication, payment processing (Braintree), controllers for user, category, and product actions.
       
          2. Frontend deployed via Vercel, utilizes React with various packages for testing, UI components (Ant Design), routing (React Router), and state management (Context API).
        
          1. Developed an interactive platform for visualizing sorting and searching algorithms to aid user understanding. Responsible for UI design and ensuring responsiveness across devices.
       
          2. Implemented functionalities for complex algorithms like backtracking and binary search. Collaborated with a team of five, managing medium-level contributions in feature development.
        </Text>
        <Button mt={4} colorScheme="teal" variant="outline">
          <Link href="your-github-link" isExternal>GitHub</Link>
        </Button>
        <Button mt={4} colorScheme="teal" variant="outline">
          <Link href="your-live-demo-link" isExternal>Live Demo</Link>
        </Button>
      </Box>

      <Box borderWidth="1px" borderRadius="lg" overflow="hidden" p={4}>
        <Text fontSize="xl" fontWeight="bold">To-do App</Text>
        <Text mt={2}>
          1. Backend setup, endpoints for adding, retrieving, and deleting tasks are defined. MySQL database connection is established, and tasks are stored in a 'todo' table with a 'list' table.
        </Text>
        <Text mt={2}>
          2. In the frontend, functions are defined to handle fetching, adding, and deleting tasks from the backend. State variables like tasks and inputText are initialized using useState, and useEffect is used for fetching tasks on component mount.
        </Text>
        <Button mt={4} colorScheme="teal" variant="outline">
          <Link href="your-github-link" isExternal>GitHub</Link>
        </Button>
        <Button mt={4} colorScheme="teal" variant="outline">
          <Link href="your-live-demo-link" isExternal>Live Demo</Link>
        </Button>
      </Box>

      <Box borderWidth="1px" borderRadius="lg" overflow="hidden" p={4}>
        <Text fontSize="xl" fontWeight="bold">Finance Manager</Text>
        <Text mt={2}>
          1. Backend and Authentication: The backend is powered by Firebase, utilizing its Realtime Database for efficient storage and retrieval of financial data. Firebase Authentication is implemented to ensure secure user login and account management.
        </Text>
        <Text mt={2}>
          2. Frontend and Data Visualization: The frontend is developed in React, with Tailwind CSS for an elegant and responsive UI. Financial data is beautifully visualized using Chart.js, providing users with interactive graphs and insights into their income, expenses, and savings trends.
        </Text>
        <Button mt={4} colorScheme="teal" variant="outline">
          <Link href="your-github-link" isExternal>GitHub</Link>
        </Button>
        <Button mt={4} colorScheme="teal" variant="outline">
          <Link href="your-live-demo-link" isExternal>Live Demo</Link>
        </Button>
      </Box>
    </Grid>
  );
}

export default ProjectSection;
